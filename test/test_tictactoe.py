import pytest
from TicTacToe import check_board

@pytest.mark.parametrize("board", [
    [[1, 1, 1],
     [0, 2, 2],
     [2, 1, 0]],
    [[0, 2, 2],
     [1, 1, 1],
     [1, 2, 0]],
    [[1, 2, 1],
     [2, 0, 2],
     [1, 1, 1]],
    [[1, 2, 2],
     [1, 0, 1],
     [1, 2, 0]],
    [[2, 1, 2],
     [0, 1, 1],
     [2, 1, 0]],
    [[2, 0, 1],
     [0, 0, 1],
     [2, 0, 1]],
    [[1, 2, 1],
     [2, 1, 2],
     [2, 2, 1]],
    [[2, 2, 1],
     [2, 1, 2],
     [1, 2, 1]]
])
def test_X_wins(board):
    assert check_board(board) == 1

@pytest.mark.parametrize("board", [
    [[2, 2, 2],
     [0, 1, 2],
     [1, 1, 0]],
    [[0, 1, 1],
     [2, 2, 2],
     [1, 2, 0]],
    [[1, 0, 1],
     [0, 0, 2],
     [2, 2, 2]],
    [[2, 0, 1],
     [2, 0, 0],
     [2, 1, 1]],
    [[0, 2, 1],
     [0, 2, 1],
     [1, 2, 0]],
    [[1, 0, 2],
     [1, 0, 2],
     [0, 1, 2]],
    [[2, 1, 1],
     [1, 2, 2],
     [2, 1, 2]],
    [[1, 1, 2],
     [1, 2, 2],
     [2, 1, 1]]
])
def test_check_O_wins(board):
    assert check_board(board) == 2

@pytest.mark.parametrize("board", [
    [[2, 2, 2],
     [0, 1, 2],
     [1, 1, 0]],
    [[0, 1, 1],
     [2, 2, 2],
     [1, 2, 0]],
    [[1, 0, 1],
     [0, 0, 2],
     [2, 2, 2]],
    [[2, 0, 1],
     [2, 0, 0],
     [2, 1, 1]],
    [[0, 2, 1],
     [0, 2, 1],
     [1, 2, 0]],
    [[1, 0, 2],
     [1, 0, 2],
     [0, 1, 2]],
    [[2, 1, 1],
     [1, 2, 2],
     [2, 1, 2]],
    [[1, 1, 2],
     [1, 2, 2],
     [2, 1, 1]]
])
def test_X_wins(board):
    assert check_board(board) == 2

@pytest.mark.parametrize("board", [
    [[0, 0, 0],
     [0, 0, 0],
     [0, 0, 0]],
    [[1, 0, 0],
     [0, 0, 0],
     [0, 0, 0]],
    [[0, 0, 1],
     [0, 0, 0],
     [0, 0, 0]],
    [[0, 0, 0],
     [1, 0, 0],
     [0, 0, 0]],
    [[0, 0, 0],
     [0, 0, 1],
     [0, 0, 0]],
    [[0, 0, 0],
     [0, 0, 0],
     [1, 0, 0]],
    [[0, 0, 0],
     [0, 0, 0],
     [0, 0, 1]],
    [[1, 0, 0],
     [0, 2, 0],
     [0, 0, 1]],
    [[1, 0, 0],
     [0, 0, 1],
     [0, 1, 0]],
    [[0, 0, 1],
     [0, 2, 0],
     [1, 0, 0]],
    [[0, 1, 0],
     [1, 0, 0],
     [0, 0, 1]],
    [[0, 1, 0],
     [0, 0, 1],
     [1, 0, 0]],
    [[0, 0, 1],
     [1, 0, 0],
     [0, 1, 0]]
])
def test_game_not_finished(board):
    assert check_board(board) == -1

@pytest.mark.parametrize("board", [
    [[1, 1, 2],
     [2, 2, 1],
     [1, 1, 2]],
    [[2, 2, 1],
     [1, 1, 2],
     [2, 2, 1]],
    [[1, 2, 1],
     [1, 2, 2],
     [2, 1, 1]],
    [[2, 1, 2],
     [2, 1, 1],
     [1, 2, 2]],
    [[1, 2, 1],
     [2, 2, 1],
     [1, 1, 2]],
    [[2, 1, 2],
     [1, 1, 2],
     [2, 2, 1]]
])
def test_draw(board):
    assert check_board(board) == 0